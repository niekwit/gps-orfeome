name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Formatting
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install gpsw for linting
        run: |
          python -m pip install --upgrade pip

          pip install -e . # Install the package and its dependencies
      - name: Lint workflow
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .test
          snakefile: workflow/Snakefile
          snakemake-version: 8.25.5
          args: "--lint"
        env:
          PYTHONPATH: ${{ github.workspace }}/src # Adds 'src' folder to Python path

  Unit-Tests:
    runs-on: ubuntu-latest
    needs: [Linting, Formatting]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies and build package
        run: |
          python -m pip install --upgrade pip
          pip install tomli # Ensure tomli/tomllib for setup.py
          pip install -e .
          pip install unittest-xml-reporting

      - name: Run unit tests
        run: |
          python -m unittest discover -s . -p 'test_*.py' -v

  End-to-End-Workflow-Test:
    runs-on: ubuntu-latest
    needs:
      - Unit-Tests
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python for Snakemake workflow
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies and Snakemake
        run: |
          python -m pip install --upgrade pip
          pip install tomli # Ensure tomli/tomllib for setup.py
          pip install -e .

      - name: Test workflow (Snakemake)
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .test
          snakefile: workflow/Snakefile
          snakemake-version: 8.25.5
          args: "--use-conda --show-failed-logs --cores 3 --conda-cleanup-pkgs cache"
        env: # <--- IMPORTANT: Add PYTHONPATH here for the Snakemake execution
          PYTHONPATH: ${{ github.workspace }}/src

      - name: Generate Test Report
        uses: snakemake/snakemake-github-action@v2
        with:
          directory: .test
          snakefile: workflow/Snakefile
          snakemake-version: 8.25.5
          args: "--report report.zip"
        env: # <--- IMPORTANT: Add PYTHONPATH here for the Snakemake report generation as well
          PYTHONPATH: ${{ github.workspace }}/src